{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('button[data-start]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\nconst daysElement = document.querySelector('[data-days]');\n\nlet userSelectedDate = '';\nconst fp = flatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    userSelectedDate = selectedDates[0].getTime();\n    const currentDateTimestamp = Date.now();\n    if (userSelectedDate < currentDateTimestamp) {\n      iziToast.show({\n        theme: 'dark',\n        message: 'Please choose a date in the future',\n        position: 'center',\n        progressBarColor: 'rgb(0, 255, 184)',\n        timeout: 2000,\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n    console.log(userSelectedDate);\n    let ms = userSelectedDate - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(ms);\n    updateClockFace({ days, hours, minutes, seconds });\n  },\n});\n\nstartBtn.addEventListener('click', () => {\n  let interval = setInterval(() => {\n    let ms = userSelectedDate - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(ms);\n    updateClockFace({ days, hours, minutes, seconds });\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nfunction updateClockFace({ days, hours, minutes, seconds }) {\n  daysElement.textContent = `${days}`;\n  hoursElement.textContent = `${hours}`;\n  minutesElement.textContent = `${minutes}`;\n  secondsElement.textContent = `${seconds}`;\n}\n"],"names":["startBtn","hoursElement","minutesElement","secondsElement","daysElement","userSelectedDate","flatpickr","selectedDates","currentDateTimestamp","iziToast","ms","days","hours","minutes","seconds","convertMs","updateClockFace"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAc,SAAS,cAAc,aAAa,EAExD,IAAIC,EAAmB,GACZC,EAAU,mBAAoB,CACvC,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BF,EAAmBE,EAAc,CAAC,EAAE,QAAO,EAC3C,MAAMC,EAAuB,KAAK,MAC9BH,EAAmBG,GACrBC,EAAS,KAAK,CACZ,MAAO,OACP,QAAS,qCACT,SAAU,SACV,iBAAkB,mBAClB,QAAS,GACjB,CAAO,EACDT,EAAS,SAAW,IAEpBA,EAAS,SAAW,GAEtB,QAAQ,IAAIK,CAAgB,EAC5B,IAAIK,EAAKL,EAAmB,KAAK,IAAG,EACpC,KAAM,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDM,EAAgB,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAAA,CAClD,CACH,CAAC,EAEDd,EAAS,iBAAiB,QAAS,IAAM,CACxB,YAAY,IAAM,CAC/B,IAAIU,EAAKL,EAAmB,KAAK,IAAG,EACpC,KAAM,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDM,EAAgB,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAAA,CAClD,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUL,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,SAASE,EAAgB,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DV,EAAY,YAAc,GAAGO,CAAI,GACjCV,EAAa,YAAc,GAAGW,CAAK,GACnCV,EAAe,YAAc,GAAGW,CAAO,GACvCV,EAAe,YAAc,GAAGW,CAAO,EACzC"}